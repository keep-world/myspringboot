<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper是根标签，namespace属性：在Mybatis全局范围内找到一个具体的Mapper配置 -->
<!-- 引入接口后，为了方便通过接口全类名来找到Mapper配置文件，所以通常将namespace属性设置为接口全类名 -->
<mapper namespace="com.test.mappers.EmplyeeMapper">
    <!-- 编写具体的SQL语句，使用id属性唯一的标记一条SQL语句 -->
    <!-- resultType属性：指定封装查询结果的Java实体类的全类名 -->
    <select id="selectEmployee" resultType="com.test.pojo.Employee">
        <!-- Mybatis负责把SQL语句中的#{}部分替换成“?”占位符，在#{}内部还是要声明一个见名知意的名称 -->
        select emp_id empId,emp_name empName,emp_salary empSalary from t_emp where emp_id=#{empId}
    </select>

    <select id="selectAll" resultType="com.test.pojo.Employee">
        <!-- Mybatis负责把SQL语句中的#{}部分替换成“?”占位符，在#{}内部还是要声明一个见名知意的名称 -->
        select emp_id empId,emp_name empName,emp_salary empSalary from t_emp where 1=1
    </select>

    <select id="selectMapUnderscoreAll" resultType="emp">
        <!-- Mybatis负责把SQL语句中的#{}部分替换成“?”占位符，在#{}内部还是要声明一个见名知意的名称 -->
        select emp_id,emp_name ,emp_salary from t_emp where 1=1
    </select>

    <insert id="insertEmployee" useGeneratedKeys="true" keyColumn="emp_id" keyProperty="myEmp.empId">
        insert into t_emp (emp_name,emp_salary) values (#{myEmp.empName},#{myEmp.empSalary});
    </insert>

    <insert id="insertEmployeeByParam">
        insert into t_emp (emp_name,emp_salary) values (#{col1},#{col2});
    </insert>

    <resultMap id="myMap" type="emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="emp_salary" property="empSalary"></result>
    </resultMap>

    <!-- 模糊查询的两种方式
     1,mysql中的concat函数可以处理
     2,用bind重新设定并绑定一个新的参数名字
     -->
    <select id="selectEmployeeByResultMap" resultMap="myMap">
        <!-- Mybatis负责把SQL语句中的#{}部分替换成“?”占位符，在#{}内部还是要声明一个见名知意的名称 -->
        <!--select * from t_emp where emp_name like concat('%',#{name},'%'); -->

        <bind name="likeName" value="'' + name + '%'"/>
         select * from t_emp where emp_name like #{likeName};
    </select>



</mapper>